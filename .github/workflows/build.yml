name: Build
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "*.md"

  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "*.md"

  release:
    types: [published]

jobs:
  prebuild:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - data: ["18.x"]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        env:
          CFG: ${{ toJSON(matrix.cfg) }}
        run: echo 'matrix=["16.x","18.x"]' >> $GITHUB_OUTPUT
        # run: jq -r -n 'env.CFG | fromjson | @json "matrix=\(.data)"' >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [prebuild]

    strategy:
      matrix:
        node-version: ${{ fromJson(needs.prebuild.outputs.matrix) }}

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Build
      run: |
        npm install
        npm run build

  npm_pack:
    runs-on: ubuntu-latest
    needs: [prebuild, build]

    strategy:
      matrix:
        node-version: ${{ fromJson(needs.prebuild.outputs.matrix) }}

    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Pack
      run: |
        cd leapp-ec2-instance-connect-plugin
        npm pack

  create_artifact:
    runs-on: ubuntu-latest
    needs: npm_pack
    steps:
    - name: Create plugin artifacts
      uses: actions/upload-artifact@v3
      with:
        name: plugin-artifact
        path: leapp-ec2-instance-connect-plugin/*.tgz
        retention-days: 1

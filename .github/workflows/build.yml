name: application CI
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "*.md"

  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "*.md"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    # - uses: actions/checkout@v3

    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     registry-url: 'https://registry.npmjs.org'

    # - name: Build
    #   run: |
    #     npm install
    #     npm run build

    # - name: Pack
    #   run: |
    #     cd leapp-ec2-instance-connect-plugin
    #     npm pack

    - run: echo hi > hi.txt
    - name: Create plugin artifacts
      uses: actions/upload-artifact@v3
      with:
        name: plugin-artifact
        path: hi.txt
        # path: leapp-ec2-instance-connect-plugin/*.tgz
        retention-days: 1

    - name: Download artifact
      uses: actions/github-script@v6.4.1
      with:
        script: |
          console.dir(context.payload);

# let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   run_id: context.payload.workflow_run.id,
# });
# let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
#   return artifact.name == "plugin-artifact"
# })[0];
# console.dir(matchArtifact.id);
# let download = await github.rest.actions.downloadArtifact({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   artifact_id: matchArtifact.id,
#   archive_format: 'zip',
# });
# let fs = require('fs');
# fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/plugin_artifact.zip`, Buffer.from(download.data));

    # - name: Unzip artifact
    #   run: unzip plugin_artifact.zip

    # Setup .npmrc file to publish to npm
    # - name: 'Setup nodejs'
    #   uses: actions/setup-node@v3
    #   with:
    #       node-version: '18.x'
    #       registry-url: 'https://registry.npmjs.org'

    # - name: Publish to npm
    #   run: npm publish --dry-run leapp-ec2*.tgz
    #   env:
    #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
